name: Deploy to AWS ECS

on:
  push:
    branches:
      - main  # Adjust if using a different branch

jobs:
  deploy:
    name: Build, Push, and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build the JAR file with Maven
        run: mvn clean package -DskipTests

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Tag Docker Image
        run: |
          IMAGE_TAG=$(date +%s)
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG .
          docker tag ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG

      - name: Push Docker Image to ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG

      # ðŸ”¹ Check if the Task Definition Already Exists
      - name: Check if Task Definition Exists
        id: check-task-def
        continue-on-error: true
        run: |
          aws ecs describe-task-definition --task-definition ${{ secrets.ECS_TASK_DEFINITION }} --query taskDefinition > sayhi-task-def.json || echo "{}" > sayhi-task-def.json

      # ðŸ”¹ Register a New Task Definition If None Exists
      - name: Register New Task Definition (if missing)
        if: steps.check-task-def.outcome == 'failure'
        run: |
          echo "Task Definition not found, creating a new one..."
          cat <<EOF > sayhi-task-def.json
          {
            "family": "sayhi-task-definition",
            "containerDefinitions": [
              {
                "name": "sayhi",
                "image": "${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:latest",
                "cpu": 1024,
                "memory": 3072,
                "essential": true,
                "portMappings": [
                  {
                    "containerPort": 8080,
                    "protocol": "tcp"
                  }
                ],
                "logConfiguration": {
                  "logDriver": "awslogs",
                  "options": {
                    "awslogs-group": "/ecs/sayhi-task-definition",
                    "awslogs-region": "eu-west-1",
                    "awslogs-stream-prefix": "ecs"
                  }
                }
              }
            ],
            "executionRoleArn": "arn:aws:iam::452754751479:role/ecsTaskExecutionRole",
            "networkMode": "awsvpc",
            "requiresCompatibilities": ["FARGATE"],
            "cpu": "1024",
            "memory": "3072"
          }
          EOF
          aws ecs register-task-definition --cli-input-json file://sayhi-task-def.json

      # ðŸ”¹ Update the Task Definition with the Correct Image
      - name: Update ECS Task Definition with New Image
        run: |
          IMAGE_TAG=$(date +%s)
          echo "Using Image Tag: $IMAGE_TAG"
          jq --arg image "${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG" '.containerDefinitions[0].image = $image' sayhi-task-def.json > new-task-def.json
          mv new-task-def.json sayhi-task-def.json

      # ðŸ”¹ Debug: Print the final task definition before deployment
      - name: Debug Task Definition JSON
        run: cat sayhi-task-def.json

      - name: Register New Task Definition in AWS
        run: |
          aws ecs register-task-definition --cli-input-json file://sayhi-task-def.json

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ secrets.ECS_TASK_DEFINITION }}
          cluster: ${{ secrets.ECS_CLUSTER }}
          service: ${{ secrets.ECS_SERVICE }}
          wait-for-service-stability: true
